# 
#          NPT simulation using the ReaxFF potential
#
#                     Kenny Jolley  Feb 2019

# 2 Simulation blocks:
#   - Initial relaxation of the system (to move past transients)
#   - Equilibrate in NPT and output running average quantities

# Requires:
#  ffield
#  lattice file with the mass defined

# -----------------------------------
#  Configurable variables
# -----------------------------------

variable input_file   string  'lammps.lattice.dat'    #  Input filename of the lattice

variable av_temp      equal   300        #  System temperature [K] 
variable av_pressure  equal    0.0       #  Average external pressure [Atm]
variable init_eq_time equal    10.0      #  Initial Equilibration time [ps]

variable output_freq  equal    0.5       #  Output period of data in log files [ps]
variable output_av    equal    1.0       #  Running_average output time period [ps]

variable dump_freq    equal    1.0       #  Output frequency of dump files containing atom coordinates [ps]

variable runtime      equal   1000.0     #  Simulation runtime [ps] after the Equilibration phase


# Should NOT need to change these variables

variable sim_timestep equal     0.0005  #  Timestep to use in the MD simulations [ps]
variable random_seed  equal      52253  #  Seed of the random number generator

# -----------------------------------
#  Simulation commands
# -----------------------------------

#
# ReaxFF potential settings
#

dimension       3
boundary        p p p 
units           real

atom_style  charge
read_data       ${input_file}

# pair_style  reax/c NULL
# pair_coeff  * * ffield C

pair_style hybrid/overlay reax/c NULL  zbl 1.0 1.15
pair_coeff * * reax/c ffield C
pair_coeff * * zbl 6.0 6.0

neighbor       2. bin
neigh_modify   every 10 delay 0 check no
fix            99 all qeq/reax 1 0.0 10.0 1e-6 reax/c


#
# Initial NPT equilibration
#
print " "
print "-----------------------------------"
print "  Begin Initial NPT equilibration"
print "-----------------------------------"
print " "

print "Thermalising at ${av_temp} K"
print "Thermalisation time ${init_eq_time} ps"

# NPT fix
fix      1  all npt temp ${av_temp} ${av_temp} 50.0 aniso ${av_pressure} ${av_pressure} 500.0

# Set timestep
variable reaxff_sim_timestep equal (${sim_timestep}*1000.0)
timestep ${reaxff_sim_timestep}

variable num_timesteps equal  ${init_eq_time}/${sim_timestep}

print "Equilibration timesteps required = ${num_timesteps} "
print " "

# Output data format of the log file
thermo_style    custom time etotal temp press lx ly lz vol density
# Output frequency of the log file
variable thermo_freq equal ${output_freq}/${sim_timestep}
thermo          ${thermo_freq}
thermo_modify lost ignore flush yes

variable doubleT  equal  ${av_temp}*2
velocity all create ${doubleT} ${random_seed} dist gaussian mom yes rot yes


# run equilibration simulation for defined no. of timesteps.
run		${num_timesteps}

print " "
print " Initial relaxation complete. "
print " "


#
# Equilibrate in NPT
#
print " "
print "-----------------------------------------------"
print "  Equilibrate in NPT - Outputting running averages to file"
print "-----------------------------------------------"
print " "

reset_timestep 0

# Measure average box lengths
variable Length_x equal lx
variable Length_y equal ly
variable Length_z equal lz
variable Temperature equal temp
variable Pressure equal press
variable Energy equal etotal
variable sysDensity equal density
variable avsteps equal (v_output_av/${sim_timestep})
fix 2 all ave/time 1 ${avsteps} ${avsteps} v_Length_x v_Length_y v_Length_z v_Temperature v_Pressure v_Energy v_sysDensity ave running file Running_average.txt format %20.16g title1 "Running average data for fix 2"

# Define a variable v_simtime, and set equal to simulation time for each atom
variable simtime atom time
# Define computes for the ke and pe of each atom
compute ke all ke/atom
compute pe all pe/atom


# Write lattice to output file, custom column format.
variable dump_freqsteps equal (v_dump_freq/${sim_timestep})
dump            6 all custom ${dump_freqsteps} dump*.dat.gz id element x y z v_simtime c_ke c_pe
# use LBOMD convention for atom names
#dump_modify     6 element C_


# run equilibration simulation for defined no. of timesteps.
variable avsteps equal (v_runtime/${sim_timestep})
run     ${avsteps}



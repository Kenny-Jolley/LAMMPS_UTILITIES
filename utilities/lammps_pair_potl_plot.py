
# A general script that tests a pair potential
# --- work in progress ---

import sys
import os

# --------------------------------------------
# Configurable variables
# --------------------------------------------

# atom 1  - The atom we move to test the pair interaction
atom1_name = "B"
atom1_Z = 5  # number of protons
atom1_Q = 1.4175  # electric charge

# atom 2 - A fixed atom at 100,100
atom2_name = "O"
atom2_Z = 8  # number of protons
atom2_Q = -0.945  # electric charge

# atoms 3 onwards, extra atoms required to balance charge
atoms_extra = "3 1 1.4175 98.5 100 100 \n" \
              "4 2 -0.945 98.5 101.5 100 \n" \
              "5 2 -0.945 98.5 98.5 100 \n"


# lattice options
tot_atoms = 5
tot_atom_types = 2
masses = "Masses\n\n1 15.9994\n2 10.811\n\n"
lat_x = 200
lat_y = 200
lat_z = 200

# lammps command
lmp_command = "lmp_serial < lammps.IN > output.txt"

# --------------------------------------------


def gen_lattice(sep):
    file = open('lammps.lattice.dat', 'w+')
    file.write("Lammps data file generated by lammps_pair_potl_plot.py\n")
    file.write("#  Pair sep = " + str(sep) + "\n")
    file.write(str(tot_atoms) + " atoms \n\n")
    file.write(str(tot_atom_types) + " atom types # O B \n\n")

    file.write("0.0 " + str(lat_x) + " xlo xhi\n")
    file.write("0.0 " + str(lat_y) + " ylo yhi\n")
    file.write("0.0 " + str(lat_z) + " zlo zhi\n\n")

    file.write(masses)

    file.write("Atoms # charge\n\n")

    # atom 1
    file.write("1 1 " + str(atom1_Q) + " " + str(100 + float(sep)) + " 100 100 \n")

    # atom 2
    file.write("2 2 " + str(atom2_Q) + " 100 100 100 \n")

    # atom extra
    file.write(atoms_extra)

    file.close()


def get_energy():
    file = open('output.txt', 'r')
    # --- read the input file and write the output ---

    while 1:
        # read line, exit if at end of file
        fileline = file.readline()
        if not fileline:
            break

        # split line into a list
        fileline = fileline.split()

        # if list is zero length, then skip
        if len(fileline) == 0:
            continue
        # print(fileline)

        # Firstly find the energy line
        if (fileline[0] == "Step") and (fileline[1] == "Time") and (fileline[2] == "Temp"):
            # next line is the data
            fileline = file.readline()
            fileline = fileline.split()
            file.close()

            return float(fileline[3])

    print("Error, could not find energy:")
    file.close()
    sys.exit()



#gen_lattice(1)


#os.system(lmp_command)

#print(get_energy())

# table setup
tab_step = 0.1
tab_min = 0.2
tab_max = 15.0
tab_points = int(((tab_max - tab_min) / tab_step) + 0.5) + 1

file = open('pot_.txt', 'w+')
file.write("N " + str(tab_points) + " R " + str(tab_min) + '  ' + str(tab_max) + "\n\n")

for i in range(tab_points):
    r = float(tab_min + i * tab_step)

    gen_lattice(r)
    os.system(lmp_command)
    file.write(str(r) + " " + str(get_energy()) + "\n")
    print(str(r) + " " + str(get_energy()))

file.close()
